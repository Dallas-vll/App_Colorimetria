import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from "recharts";

export default function CharacteristicsRadar({ analysis }) {
  const data = [
    {
      characteristic: "Temperatura",
      value: ((analysis.temperature_score + 1) / 2) * 100,
      fullMark: 100,
    },
    {
      characteristic: "Profundidade",
      value: ((analysis.depth_score + 1) / 2) * 100,
      fullMark: 100,
    },
    {
      characteristic: "Intensidade",
      value: ((analysis.intensity_score + 1) / 2) * 100,
      fullMark: 100,
    },
    {
      characteristic: "Contraste",
      value: ((analysis.contrast_score + 1) / 2) * 100,
      fullMark: 100,
    },
  ];

  return (
    <Card className="bg-white/90 backdrop-blur-sm shadow-xl border-2 border-white">
      <CardHeader>
        <CardTitle>Análise de Características</CardTitle>
        <p className="text-sm text-gray-600">
          Visualização das dimensões da sua colorimetria pessoal
        </p>
      </CardHeader>
      <CardContent>
        <ResponsiveContainer width="100%" height={300}>
          <RadarChart data={data}>
            <PolarGrid stroke="#e5e7eb" />
            <PolarAngleAxis
              dataKey="characteristic"
              tick={{ fill: "#6b7280", fontSize: 14 }}
            />
            <PolarRadiusAxis angle={90} domain={[0, 100]} tick={{ fill: "#9ca3af" }} />
            <Radar
              name="Valor"
              dataKey="value"
              stroke="#9333ea"
              fill="#9333ea"
              fillOpacity={0.6}
            />
          </RadarChart>
        </ResponsiveContainer>

        <div className="mt-6 grid grid-cols-2 gap-4 text-sm">
          <div>
            <p className="text-gray-600 mb-2">Temperatura</p>
            <div className="flex items-center gap-2">
              <div className="flex-1 h-2 bg-gradient-to-r from-blue-400 to-orange-400 rounded-full" />
              <span className="text-xs text-gray-500">
                {analysis.temperature_score < -0.3 ? "Frio" : analysis.temperature_score > 0.3 ? "Quente" : "Neutro"}
              </span>
            </div>
          </div>
          <div>
            <p className="text-gray-600 mb-2">Profundidade</p>
            <div className="flex items-center gap-2">
              <div className="flex-1 h-2 bg-gradient-to-r from-gray-200 to-gray-800 rounded-full" />
              <span className="text-xs text-gray-500">
                {analysis.depth_score < -0.3 ? "Clara" : analysis.depth_score > 0.3 ? "Escura" : "Média"}
              </span>
            </div>
          </div>
          <div>
            <p className="text-gray-600 mb-2">Intensidade</p>
            <div className="flex items-center gap-2">
              <div className="flex-1 h-2 bg-gradient-to-r from-purple-200 to-purple-600 rounded-full" />
              <span className="text-xs text-gray-500">
                {analysis.intensity_score < -0.3 ? "Suave" : analysis.intensity_score > 0.3 ? "Brilhante" : "Médio"}
              </span>
            </div>
          </div>
          <div>
            <p className="text-gray-600 mb-2">Contraste</p>
            <div className="flex items-center gap-2">
              <div className="flex-1 h-2 bg-gradient-to-r from-gray-300 to-black rounded-full" />
              <span className="text-xs text-gray-500">
                {analysis.contrast_score < -0.3 ? "Baixo" : analysis.contrast_score > 0.3 ? "Alto" : "Médio"}
              </span>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}